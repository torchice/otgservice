/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package otgservice;

import java.awt.Point;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static otgservice.ShowBarang.arrcart;
import static otgservice.ShowBarang.ctrtrans;
import static otgservice.ShowBarang.kode;
//import static otgservice.ShowBarang.hargapcs;
//import static otgservice.ShowBarang.kodebrg;
//import static otgservice.ShowBarang.namacart;
//import static otgservice.ShowBarang.pilih;
//import static otgservice.ShowBarang.totalharga;

/**
 *
 * @author Andy
 */
public class frameTransaksi extends javax.swing.JFrame {

    /**
     * Creates new form frameTransaksi
     */
    
     //ArrayList <Transaksi> arrbarang =  new ArrayList<>();
    String kode;
    Integer ctr=1;
    int test;
    int hargatrans=0;
    ArrayList <Integer> arrtrans = new ArrayList<>();
    public frameTransaksi() {
        initComponents();
        jLabel7.setText(String.valueOf(otgservice.ShowBarang.tot));
//        jLabel7.setText(String.valueOf(otgservice.ShowBarang.totalharga));
        kodetrans.setText(otgservice.ShowBarang.kode.toString());
        selectnama();
        selectData();
        cekkode();
        for (int i = 0; i < arrcart.size(); i++) {
            
        }
    }
     public Double [] hargasatuan = new Double[99];
     double totalharga;
     public void hitung(){
        for (int i = 0; i < otgservice.ShowBarang.arrcart.size(); i++) {
            //hargasatuan[i]=otgservice.ShowBarang.arrcart.get(i).getHargapcs();
            totalharga=totalharga+hargasatuan[i];
            
        }
        jLabel7.setText(String.valueOf(totalharga));
    }
    public void list(){
        if (otgservice.ShowBarang.arrcart.size()>0){
            for (int i = 0; i < otgservice.ShowBarang.arrcart.size(); i++) {
            //cb1.addItem(otgservice.ShowBarang.arrcart.get(i).getNama());
                }
            //listbox.setModel(pilih);
        }    
       }
         public void selectnama() 
    {
        String SQL = "SELECT C.NAMACUSTOMER FROM CUSTOMER C,DBUSERNAME DB WHERE C.USERNAME=DB.USERNAME AND DB.USERNAME='"+ otgservice.Login.username +"'";
        ResultSet rs = OTGService.executeQuery(SQL);
        
        try {
            while(rs.next()) {
                String namacustomer = rs.getString(1);

                jLabel8.setText(namacustomer);
                
                
            }
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Masih Gagal", "Gagal", JOptionPane.INFORMATION_MESSAGE);

            Logger.getLogger(OTGService.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
        public void selectData() 
    {
        String kolom[] = {"Kodetrans","NamaBarang","Quantity","Hargapcs"}; //kolom untuk jTable yang ada di form
        DefaultTableModel dtm = new DefaultTableModel(null, kolom);//untuk menyimpan hasil select
        
        String SQL = "SELECT kodetrans,namabarang,quantity,hargapcs FROM detailtransaksi2 WHERE username='"+otgservice.Login.username+"'";
        ResultSet rs = OTGService.executeQuery(SQL);
        
        try {
            while(rs.next()) {
                String kodebarang = rs.getString(1);
                String namabarang = rs.getString(2);
                Integer qty=rs.getInt(3);
                Integer hargapcs=rs.getInt(4);
    
                String data[] = {kodebarang,namabarang,String.valueOf(qty),String.valueOf(hargapcs)};
                dtm.addRow(data);
                
            }
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Masih Gagal", "Gagal", JOptionPane.INFORMATION_MESSAGE);

            Logger.getLogger(OTGService.class.getName()).log(Level.SEVERE, null, ex);
        }
        tbldata.setModel(dtm);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        kodetrans = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbldata = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("FRAME TRANSAKSI");

        jLabel2.setText("Kode Transaksi");

        kodetrans.setText("jLabel3");

        jLabel4.setText("Nama Customer");

        jLabel6.setText("Total Harga");

        jButton1.setText("Finish");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tbldata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbldata.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbldata);

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("jLabel7");

        jLabel8.setText("jLabel8");

        jLabel10.setText("List Barang");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kodetrans))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel10)
                            .addComponent(kodetrans))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    ArrayList <Transaksi> arrbarang =  new ArrayList<>();
    int indexlist;
    int hargapcs;
    int qty;
      public void hargaqty() 
    {
        String SQL = "SELECT HARGAJUAL FROM BARANG WHERE KODEBARANG='"+ otgservice.Login.username +"'";
        ResultSet rs = OTGService.executeQuery(SQL);
        
        try {
            while(rs.next()) {
                String namacustomer = rs.getString(1);

                jLabel8.setText(namacustomer);
                
                
            }
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Masih Gagal", "Gagal", JOptionPane.INFORMATION_MESSAGE);

            Logger.getLogger(OTGService.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
      double hargaperitem;
      double hargapiece;
      //double totalharga;
        public static DefaultListModel fix;
       
        int index;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ShowBarang.f2.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    public void inputdaftarbarang(){
                try {
                    String sql = "INSERT INTO BARANG (KODEBARANG, NAMABARANG, STOK,HARGAJUAL, HARGAPOKOK) values ( ?, ?, ?, ?, ?)";
                    PreparedStatement statement = OTGService.setKoneksi().prepareStatement(sql);
                    //statement.setString(1, kodebrg);
                    //statement.setString(2, tbnamabrg.getText());
                    //statement.setInt(3, Integer.parseInt((stok.getValue().toString())));
                    //statement.setInt(4, Integer.parseInt(tbhargajual.getText()));
                    //statement.setInt(5, Integer.parseInt(tbhargapokok.getText()));
                  
                    
                    int row = statement.executeUpdate();
                    if (row > 0) {
                        JOptionPane.showMessageDialog(this, "Stok barang berhasil ditambahkan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else {
                        JOptionPane.showMessageDialog(this, "Masih Gagal", "Gagal", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(daftarTeknisi.class.getName()).log(Level.SEVERE, null, ex);
                }
        
    }
    int ctrsatuan=0;
    int ctrkode=0;
    String kodeheader;
    String kodedtltrans;
    int ctrkodetrans;
    
    public void genkodetrans(){
        if (ctrkodetrans<10){
            kodedtltrans="H00"+String.valueOf(ctrkodetrans);
        }
        else if (ctrkodetrans>=10 && ctrkodetrans<100){
             kodedtltrans="H0"+String.valueOf(ctrkodetrans);
        }
        else{
            kodedtltrans="H"+String.valueOf(ctrkodetrans);
        }
        ctrkodetrans++;
    }
    String sql;
    PreparedStatement statement;
    public void headertrans(){
            try {
                    genkodetrans();
                    /*sql = "INSERT INTO DETAILTRANSAKSI2 (KODEHEADER, USERNAME, KODETRANS) values ( ?, ?, ?)";
                    statement = OTGService.setKoneksi().prepareStatement(sql);
                    statement.setString(1, kodeheader);
                    statement.setString(2, otgservice.Login.username);
                    statement.setString(3, kodedtltrans);
                    */
                    sql = "DELETE FROM ) values ( ?, ?, ?)";
                    statement = OTGService.setKoneksi().prepareStatement(sql);
                    statement.setString(1, kodeheader);
                    statement.setString(2, otgservice.Login.username);
                    statement.setString(3, kodedtltrans);
                    //statement.setString(4, jk);
                    ctrsatuan++;
                    int row = statement.executeUpdate();
                    if (row > 0) {
                        JOptionPane.showMessageDialog(this, "Selamat Anda Sudah Terdaftar Sebagai Customer Kami", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else {
                        JOptionPane.showMessageDialog(this, "Masih Gagal", "Gagal", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(daftarTeknisi.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    
    public void cekkode(){
       
        String cari_kode = "SELECT MAX(SUBSTR(KODEHEADER,3)) FROM `HEADERTRANSAKSI2`";
        ResultSet rs = OTGService.executeQuery(cari_kode);
        try {
            while(rs.next()) {
                ctrkode = rs.getInt(1) + 1;
                if (ctrkode<10) {
                    kodeheader = "HD00" + String.valueOf(ctrkode);
                }
                else if (ctrkode >= 10 && ctrkode <1000) {
                    kodeheader = "H0" + String.valueOf(ctrkode);
                }
                else if (ctrkode > 1000){
                    kode = "H" + String.valueOf(ctrkode);
                }
                
            
            }
            
        } 
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
             JOptionPane.showMessageDialog(this, "Terimakasih sudah membeli", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    int cekstok;
    private void tbldataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldataMouseClicked
        // TODO add your handling code here:
        Point mouse = evt.getPoint();
        int row = tbldata.rowAtPoint(mouse);
        int col = tbldata.columnAtPoint(mouse);
         //otgservice.ShowBarang.namacart=tbldata.getValueAt(row, 1).toString();
        //otgservice.ShowBarang.kodebrg=tbldata.getValueAt(row, 0).toString();
        //otgservice.ShowBarang.hargapcs=Double.parseDouble(tbldata.getValueAt(row, 3).toString());
        //harga=Integer.parseInt(tbldata.getValueAt(row, 3).toString());
        
        totalharga=totalharga+(int)hargapcs;
       // pilih = new DefaultListModel();
       // listbox.setModel(pilih);
        //arrcart.add(new barangDagang(kodebrg,namacart,hargapcs, (int) totalharga));
        
        for (int i = 0; i < arrcart.size(); i++) {
            //pilih.addElement("Kode : " + arrcart.get(i).getKodebrg()+" Nama: "+arrcart.get(i).getNama()+" Harga PCS "+arrcart.get(i).hargapcs +" Total: "+arrcart.get(i).getHargatotal());
            
        } 
    }//GEN-LAST:event_tbldataMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel kodetrans;
    private javax.swing.JTable tbldata;
    // End of variables declaration//GEN-END:variables
}
